package routes

import (
	"github.com/bytedance/sonic"
	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/fiber/v2/middleware/cors"
	"github.com/gofiber/fiber/v2/middleware/logger"
	"github.com/gofiber/fiber/v2/middleware/requestid"
	"github.com/gofiber/helmet/v2"
	"github.com/redis/go-redis/v9"
	"gorm.io/gorm"
)

type (
	SetupRoute struct {
		DB    *gorm.DB
		Redis *redis.Client
		Route fiber.Router
	}
)

// SetupRouter is function setup main router controller
func SetupRouter(db *gorm.DB, rd *redis.Client) *fiber.App {
	r := fiber.New(fiber.Config{
		DisableStartupMessage: true,
		CaseSensitive:         true,
		StrictRouting:         true,
		JSONEncoder:           sonic.Marshal,
		JSONDecoder:           sonic.Unmarshal,
	})
	r.Use(helmet.New())
	r.Use(cors.New())
	r.Use(logger.New(logger.Config{
		TimeFormat: "02-Jan-2006",
		TimeZone:   "Asia/Bangkok",
	}))
	r.Use(requestid.New())
	r.Use(middlewares.InjectZeroLog())
	api := r.Group("api")
	v1 := api.Group("v1")
	setupRoute := SetupRoute{
		DB:    db,
		Redis: rd,
		Route: v1,
	}

	return r
}
